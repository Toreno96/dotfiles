[user]
    name = Toreno96
    email = toreno96@gmail.com
    signingkey = 75FA716CC082C83B
[color.diff]
    # Represents this part of the diff:
    # ```
    # @@ -42,6 +42,10 @@ def foo(bar):
    #                    ~~~~~~~~~~~~~
    # ```
    # Colorize it exactly like in the default output of `colordiff`
    func = cyan
    # Represents this part of the diff:
    # ```
    # diff --git a/foo.py b/foo.py
    # index 1646df2db..f281b2a2e 100644
    # --- a/foo.py
    # +++ b/foo.py
    # ```
    # Unfortunately, as opposed to the `colordiff`, it's not possible to
    # colorize separately the `diff` and `index` part (cyan bold in
    # `colordiff`), and the `---` and `+++` part (white bold in `colordiff`).
    # Let's stick to one color that is subjectively most clear to me
    meta = white bold
[delta]
    syntax-theme = Visual Studio Dark+
[delta "diff-highlight"]
    diff-highlight = true
    keep-plus-minus-markers = true
    paging = never
[delta "ddiff"]
    line-numbers = true
    navigate = true
    paging = auto
[diff]
    tool = vimdiff
    colorMoved = default
    algorithm = patience
[difftool]
    prompt = false
[push]
    default = simple
[alias]
    diffs = diff --staged
    diffm = diff master
    ss = status --short --branch
    ignored = ! git ss --ignored | grep --color '^!!'
    checkoutfzf = ! git checkout $(git branch -a | sed 's@remotes/origin/@@' | sort -u | fzf)
    purr = pull --rebase
    lastash = checkout -p stash@{0}
    logm = log master..HEAD
    # The mnemonic [o]neline [log]
    olog = log --oneline
    ologm = log --oneline master..HEAD
    rs = restore --staged
    pushu = ! git push -u origin $(git branch --show-current)
    pusht = push --tags
    # The mnemonic [b]etter [diff]
    bdiff = ! git diff --color=always | delta --features=diff-highlight | less -FR
    bdiffs = ! git diffs --color=always | delta --features=diff-highlight | less -FR
    bdiffm = ! git diffm --color=always | delta --features=diff-highlight | less -FR
    # The mnemonic [d]elta [diff]
    ddiff = ! git diff --color=always | delta --features=ddiff
    ddiffs = ! git diffs --color=always | delta --features=ddiff
    ddiffm = ! git diffm --color=always | delta --features=ddiff
    # Add all changed tracked files to the index while being verbose about it
    # to allow instant verification of what exactly was added.
    # The alias `ada` comes from [ad]d [a]ll, while also being the tribute
    # to Ada Lovelace
    ada = add -vu
    comane = commit --amend --no-edit
    cm = checkout master
    changelog-squash = log --pretty='* %B'
    cp = cherry-pick
    mergeff = merge --ff-only
    logss = log --show-signature
    logme = ! git log --author=$(git config user.email)
    comnogpg = commit --no-gpg-sign
    # Outputs the full commit hash of the most recent commit, e.g.
    # `git hash | pbcopy` will copy the most recent commit hash into the system
    # clipboard
    hash = log -1 --pretty=tformat:%H
    rc = rebase --continue
    # Rebase interactively all commits on the current branch that are ahead of
    # `master` branch
    rebasim = ! git rebase -i --rebase-merges "HEAD~$(git ologm | wc -l | tr -d ' ')"
    # Run pre-commit hooks after each commit during the rebase
    prebase = rebase -x 'pre-commit run --from-ref HEAD~ --to-ref HEAD'
    # Rebase interactively all commits on the current branch that are ahead of
    # `master` branch and run pre-commit hooks after each commit during the rebase
    prebasim = ! git prebase -i --rebase-merges "HEAD~$(git ologm | wc -l | tr -d ' ')"
    # For fun, borrowed from: https://github.com/maciejkorsan/podlaskigit
    # Relies on the fact that there's no other command or alias starting with
    # `ak`, therefore `ak<TAB>` is enough to run this alias
    akomutopotrzebne = reset HEAD --hard
[merge]
    tool = diffconflicts
    prompt = false
[mergetool]
    keepBackup = false
[mergetool "diffconflicts"]
    cmd = vim -c DiffConflicts \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
    trustExitCode = true
[pull]
    rebase = false
[commit]
    gpgSign = true
[blame]
    ignoreRevsFile = .git-blame-ignore-revs
