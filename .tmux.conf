# Preserve original value of TERM environment variable (mostly for vimrc)
set-environment -g PRESERVED_TERM $TERM
# Set appropriate new value of TERM environment variable, based on
# presence of tmux terminfo file(s), and support of 256 colors.
#
# This is required, because while the modern versions of ncurses support the tmux terminfo definition, the older versions (e.g. the default on 2022's macOS) does _not_.
# This also allows for the automatic adjustment in case the tmux alone does not manage to set the TERM environment variable properly.
#
# On the other hand, it is better if `tmux` TERM is chosen over `screen` TERM, because the latter does not support italics, so the default to `screen*` would be suboptimal
if-shell "infocmp tmux && infocmp tmux-256color" \
  'set-environment -g TMUX_TERM_PREFIX tmux' \
  'set-environment -g TMUX_TERM_PREFIX screen'
if-shell "echo $TERM | grep 256color" \
  'set -g default-terminal $TMUX_TERM_PREFIX-256color' \
  'set -g default-terminal $TMUX_TERM_PREFIX'
# Start indexing of windows and panes from 1, not 0
set -g base-index 1
setw -g pane-base-index 1

################
### Bindings ###
################

# Rebind prefix
set -g prefix C-q
unbind-key C-b
bind-key C-q send-prefix
# Vim-like split
bind-key s split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
# Vim-like panes manipulation
bind-key k select-pane -U
bind-key l select-pane -R
bind-key j select-pane -D
bind-key h select-pane -L
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R
bind-key -r C-j resize-pane -D
bind-key -r C-h resize-pane -L
bind-key -r M-k resize-pane -U 5
bind-key -r M-l resize-pane -R 5
bind-key -r M-j resize-pane -D 5
bind-key -r M-h resize-pane -L 5
bind-key -r C-M-k resize-pane -U 10
bind-key -r C-M-l resize-pane -R 10
bind-key -r C-M-j resize-pane -D 10
bind-key -r C-M-h resize-pane -L 10
# Vi copy mode
set-window-option -g mode-keys vi
# Not working on current version
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-selection
# Etc
bind-key Q confirm-before -p 'kill-session? (y/n)' kill-session
bind-key C new-window -n 'etc' -t 0

###################
### Status line ###
###################

# colour15 => bright white
# colour69 => bluey-violet

# By default, the non-simple status is enabled.
# To switch to the simple status, run:
# ```
# $ tmux setenv -g TMUX_SIMPLE_STATUS 1
# ```
# To disable it back, run:
# ```
# $ tmux setenv -gu TMUX_SIMPLE_STATUS
# ```
#
# The non-simple status contains system info including CPU load, memory usage,
# etc. This is helpful on operating systems that does not allow to easily
# customize this into the menu bar (e.g. macOS, Linux without graphical
# environment). On other operating systems (e.g. Linux with XFCE), the simple
# status is recommended.
%if #{==:#{TMUX_SIMPLE_STATUS},}
    setw -g status-right-length 80
    setw -g status-left ''
    setw -g status-right '#{?client_prefix,^Q ,   }#(while :; do status-outdated-packages brew tmux; sleep 3600; done) | #(tmux-load-average-status) | #(macos-memory-status) | #(macos-disk-status)'
    setw -g status-justify left
%else
    setw -g status-left '   '
    setw -g status-right '#{?client_prefix,^Q ,   }'
    setw -g status-justify centre
%endif
setw -g status-bg black
setw -g status-fg colour15
setw -g window-status-style "fg=colour15 bg=black"
setw -g window-status-format ' #I #W '
setw -g window-status-current-style "fg=black bg=colour69"
setw -g window-status-current-format ' #I #W '
setw -g pane-border-style fg=colour15
setw -g pane-active-border-style fg=colour69
setw -g display-panes-colour colour15
setw -g display-panes-active-colour colour69
setw -g clock-mode-colour colour69

###############
### Plugins ###
###############

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
